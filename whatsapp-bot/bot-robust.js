const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

console.log('üöÄ JurIA Bot - Vers√£o Robusta (Funciona com TUDO!)');

const client = new Client({
    authStrategy: new LocalAuth({
        dataPath: './session-robust'
    }),
    puppeteer: {
        headless: true,
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-accelerated-2d-canvas',
            '--no-first-run',
            '--no-zygote',
            '--disable-gpu'
        ],
        timeout: 60000
    }
});

// Eventos do cliente
client.on('qr', (qr) => {
    console.log('\nüì± QR CODE - ESCANEIE PARA CONECTAR:');
    console.log('='.repeat(50));
    qrcode.generate(qr, { small: true });
    console.log('='.repeat(50));
    console.log('üí° WhatsApp > Menu > Dispositivos conectados > Conectar dispositivo');
    console.log('‚ö†Ô∏è  ESTE BOT RESPONDE A CONVERSAS PRIVADAS E GRUPOS\n');
});

client.on('authenticated', () => {
    console.log('üîê AUTENTICADO COM SUCESSO!');
});

client.on('ready', () => {
    console.log('‚úÖ JURIA BOT CONECTADO E FUNCIONANDO!');
    console.log('ü§ñ Respondendo a TODAS as mensagens (privadas e grupos)');
    console.log('üì± PIX: 04449816161 - Reginaldo Dias Junior');
    console.log('üí∞ Planos: Solo R$197/m√™s | Escrit√≥rio R$147/usu√°rio');
    console.log('\nüéØ TESTE: Envie qualquer mensagem no WhatsApp\n');
});

client.on('message', async (message) => {
    try {
        console.log('\nüîî NOVA MENSAGEM RECEBIDA!');
        console.log('üì® From:', message.from);
        console.log('üí¨ Body:', `"${message.body}"`);
        console.log('üë§ FromMe:', message.fromMe);
        console.log('üì± Type:', message.type);
        
        // N√£o responder mensagens pr√≥prias
        if (message.fromMe) {
            console.log('üö´ Ignorando mensagem pr√≥pria');
            return;
        }
        
        // Verificar se √© grupo ou privado
        const isGroup = message.from.includes('@g.us');
        const chatType = isGroup ? 'GRUPO' : 'PRIVADO';
        
        console.log(`üìç Tipo de chat: ${chatType}`);
        
        // AGORA RESPONDE TANTO GRUPOS QUANTO PRIVADOS (para teste)
        const contact = await message.getContact();
        const contactName = contact.name || contact.pushname || 'Cliente';
        
        console.log(`üë§ Nome do contato: ${contactName}`);
        console.log('‚úÖ PROCESSANDO MENSAGEM!');
        
        const response = `ü§ñ *JurIA - IA Jur√≠dica*

Ol√° *${contactName}*! üëã

Obrigado por entrar em contato!

üéØ *NOSSOS PLANOS:*

üìã *PLANO SOLO* - R$ 197/m√™s
‚Ä¢ Para advogados aut√¥nomos
‚Ä¢ IA jur√≠dica completa
‚Ä¢ An√°lise de documentos
‚Ä¢ Consulta de jurisprud√™ncia

üè¢ *PLANO ESCRIT√ìRIO* - R$ 147/usu√°rio/m√™s  
‚Ä¢ Para escrit√≥rios e equipes
‚Ä¢ Gest√£o colaborativa
‚Ä¢ Relat√≥rios avan√ßados

üí∞ *PIX para assinar:*
‚Ä¢ Chave: 04449816161
‚Ä¢ Nome: Reginaldo Dias Junior

üöÄ Qual plano te interessa mais?

_Responda "SOLO" ou "ESCRITORIO" para mais detalhes!_

*Chat: ${chatType}* | *Hora: ${new Date().toLocaleTimeString()}*`;

        console.log('üì§ ENVIANDO RESPOSTA...');
        
        // Tentar enviar a mensagem
        await client.sendMessage(message.from, response);
        
        console.log('‚úÖ RESPOSTA ENVIADA COM SUCESSO!');
        console.log(`üìä Enviado para: ${contactName} (${chatType})`);
        console.log('='.repeat(60));
        
    } catch (error) {
        console.error('‚ùå ERRO ao processar mensagem:', error.message);
        console.error('üìç Detalhes do erro:', error);
        
        // Tentar enviar mensagem de erro simples
        try {
            await client.sendMessage(message.from, 'ü§ñ Oi! Sou o JurIA Bot. Houve um problema, mas estou funcionando!');
            console.log('‚úÖ Mensagem de erro enviada');
        } catch (errorMsg) {
            console.error('‚ùå N√£o foi poss√≠vel enviar nem mensagem de erro:', errorMsg.message);
        }
    }
});

client.on('disconnected', (reason) => {
    console.log('‚ö†Ô∏è Bot desconectado:', reason);
    console.log('üîÑ Tentando reconectar em 10 segundos...');
    setTimeout(() => {
        console.log('üîÑ Reiniciando bot...');
        client.initialize();
    }, 10000);
});

client.on('auth_failure', (msg) => {
    console.error('‚ùå Falha na autentica√ß√£o:', msg);
    console.log('üîÑ Escaneie o QR Code novamente');
});

// Inicializar
console.log('üîÑ Inicializando cliente WhatsApp...');
client.initialize();

// Heartbeat mais frequente para debug
setInterval(() => {
    console.log('üíì Bot funcionando...', new Date().toLocaleTimeString());
}, 15000); // A cada 15 segundos

// Tratamento de erros
process.on('unhandledRejection', (err) => {
    console.error('‚ùå Erro n√£o tratado:', err.message);
});

process.on('uncaughtException', (err) => {
    console.error('‚ùå Exce√ß√£o n√£o capturada:', err.message);
});

console.log('‚ö° Bot configurado para responder a TODAS as mensagens!');
