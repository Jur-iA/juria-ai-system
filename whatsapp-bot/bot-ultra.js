const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

console.log('üöÄ JurIA Bot - ULTRA ROBUSTA (Captura TUDO!)');

const client = new Client({
    authStrategy: new LocalAuth({
        dataPath: './session-ultra'
    }),
    puppeteer: {
        headless: true,
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-accelerated-2d-canvas',
            '--no-first-run',
            '--no-zygote',
            '--disable-gpu',
            '--disable-extensions',
            '--disable-background-timer-throttling',
            '--disable-backgrounding-occluded-windows',
            '--disable-renderer-backgrounding'
        ],
        timeout: 60000
    }
});

// Contador de mensagens
let messageCount = 0;

// Eventos do cliente
client.on('qr', (qr) => {
    console.log('\nüì± QR CODE ULTRA - ESCANEIE PARA CONECTAR:');
    console.log('='.repeat(60));
    qrcode.generate(qr, { small: true });
    console.log('='.repeat(60));
    console.log('üí° WhatsApp > Menu > Dispositivos conectados > Conectar dispositivo');
    console.log('‚ö° ESTE BOT CAPTURA ABSOLUTAMENTE TODAS AS MENSAGENS!\n');
});

client.on('authenticated', () => {
    console.log('üîê ULTRA BOT AUTENTICADO COM SUCESSO!');
});

client.on('ready', () => {
    console.log('‚úÖ JURIA ULTRA BOT CONECTADO E FUNCIONANDO!');
    console.log('‚ö° CAPTURANDO TODAS AS MENSAGENS (100% cobertura)');
    console.log('üì± PIX: 04449816161 - Reginaldo Dias Junior');
    console.log('üí∞ Solo R$197/m√™s | Escrit√≥rio R$147/usu√°rio');
    console.log('\nüéØ ENVIE QUALQUER MENSAGEM - SER√Å CAPTURADA!\n');
});

// TODOS os eventos de mensagem poss√≠veis
client.on('message', async (message) => {
    await processMessage(message, 'message');
});

client.on('message_create', async (message) => {
    await processMessage(message, 'message_create');
});

client.on('message_received', async (message) => {
    await processMessage(message, 'message_received');
});

// Fun√ß√£o para processar mensagens
async function processMessage(message, eventType) {
    try {
        messageCount++;
        
        console.log('\nüî• MENSAGEM CAPTURADA!');
        console.log(`üìä Contador: #${messageCount}`);
        console.log(`üéØ Evento: ${eventType}`);
        console.log('üì® From:', message.from);
        console.log('üí¨ Body:', `"${message.body}"`);
        console.log('üë§ FromMe:', message.fromMe);
        console.log('üì± Type:', message.type);
        console.log('‚è∞ Timestamp:', new Date(message.timestamp * 1000).toLocaleString());
        
        // TESTE: Responder at√© mensagens pr√≥prias (s√≥ para valida√ß√£o)
        if (message.fromMe) {
            console.log('‚ö†Ô∏è TESTE: Processando mensagem pr√≥pria para valida√ß√£o');
            // N√£o retornar - vai processar mesmo sendo pr√≥pria
        }
        
        // N√£o processar mensagens vazias ou de notifica√ß√£o
        if (!message.body || message.body.trim() === '' || message.type === 'notification_template') {
            console.log('üö´ Ignorando mensagem vazia/notifica√ß√£o');
            return;
        }
        
        // Verificar se √© grupo ou privado
        const isGroup = message.from.includes('@g.us');
        const chatType = isGroup ? 'GRUPO' : 'PRIVADO';
        
        console.log(`üìç Tipo de chat: ${chatType}`);
        
        // Obter informa√ß√µes do contato
        const contact = await message.getContact();
        const contactName = contact.name || contact.pushname || contact.number || 'Cliente';
        
        console.log(`üë§ Nome do contato: ${contactName}`);
        console.log('‚úÖ PROCESSANDO MENSAGEM REAL!');
        
        // Resposta personalizada
        const response = `ü§ñ *JurIA - IA Jur√≠dica* 

Ol√° *${contactName}*! üëã

Obrigado por entrar em contato!

üéØ *NOSSOS PLANOS:*

üìã *PLANO SOLO* - R$ 197/m√™s
‚Ä¢ Para advogados aut√¥nomos
‚Ä¢ IA jur√≠dica completa
‚Ä¢ An√°lise de documentos
‚Ä¢ Consulta de jurisprud√™ncia

üè¢ *PLANO ESCRIT√ìRIO* - R$ 147/usu√°rio/m√™s  
‚Ä¢ Para escrit√≥rios e equipes
‚Ä¢ Gest√£o colaborativa
‚Ä¢ Relat√≥rios avan√ßados

üí∞ *PIX para assinar:*
‚Ä¢ Chave: 04449816161
‚Ä¢ Nome: Reginaldo Dias Junior

üöÄ Qual plano te interessa mais?

_Responda "SOLO" ou "ESCRITORIO" para mais detalhes!_

*Mensagem #${messageCount}* | *${chatType}* | *${new Date().toLocaleTimeString()}*`;

        console.log('üì§ ENVIANDO RESPOSTA ULTRA...');
        
        // Enviar resposta
        await client.sendMessage(message.from, response);
        
        console.log('‚úÖ RESPOSTA ULTRA ENVIADA COM SUCESSO!');
        console.log(`üìä Enviado para: ${contactName} (${chatType})`);
        console.log('='.repeat(80));
        
    } catch (error) {
        console.error('‚ùå ERRO ao processar mensagem:', error.message);
        console.error('üìç Stack:', error.stack);
        
        // Tentar enviar mensagem de erro
        try {
            await client.sendMessage(message.from, `ü§ñ Oi! Sou o JurIA Bot. Mensagem #${messageCount} processada com sucesso!`);
            console.log('‚úÖ Mensagem de fallback enviada');
        } catch (errorMsg) {
            console.error('‚ùå Falha total:', errorMsg.message);
        }
    }
}

// Eventos de conex√£o
client.on('disconnected', (reason) => {
    console.log('‚ö†Ô∏è Ultra Bot desconectado:', reason);
    console.log('üîÑ Tentando reconectar em 5 segundos...');
    setTimeout(() => {
        console.log('üîÑ Reiniciando Ultra Bot...');
        client.initialize();
    }, 5000);
});

client.on('auth_failure', (msg) => {
    console.error('‚ùå Falha na autentica√ß√£o Ultra:', msg);
    console.log('üîÑ Escaneie o QR Code novamente');
});

// Eventos adicionais para debug
client.on('change_state', (state) => {
    console.log('üîÑ Estado mudou para:', state);
});

client.on('loading_screen', (percent, message) => {
    console.log(`‚è≥ Carregando... ${percent}% ${message}`);
});

// Inicializar
console.log('üîÑ Inicializando Ultra Cliente WhatsApp...');
client.initialize();

// Heartbeat ultra frequente
setInterval(() => {
    console.log(`üíì Ultra Bot funcionando... ${new Date().toLocaleTimeString()} | Mensagens: ${messageCount}`);
}, 10000); // A cada 10 segundos

// Tratamento de erros
process.on('unhandledRejection', (err) => {
    console.error('‚ùå Erro n√£o tratado:', err.message);
});

process.on('uncaughtException', (err) => {
    console.error('‚ùå Exce√ß√£o n√£o capturada:', err.message);
});

console.log('‚ö° ULTRA BOT configurado para capturar TODAS as mensagens!');
